Recursion : Function call itself
we need to find the recursive function to solve the proble using recursion 
which problems can be solved by recursion?
The problem which we an divide into sub problems and the can create a pattern or recursive function out of it 
For example : fibonacci number

1,1,2,3,5,8,13.....

you can write f(n) = f(n-1) + f(n-2)

and then we have a base condition to break the loop for keep going : 

public int fibo(int n)
{
if(n < 2)
{
return n ;
}
else{
return fibo(n-2) + fibo(n-1);
}

}

public static void main(String args[])
{
fibo(5);
}
// it is very inefficient (golden ration raise to the power n  )so if we see in recursion tree we are repeating some work so we will solve it by dynamic programming


 ******Working with varaible in recurstion 1. In the argument, 2. return type 3. in the body of function 

// three varaible points => 


Binary serach 

1. Comparing 
2. devide into 2 half
3. f(n) = o(1)(comparision) + f(N/2)(dividing array in two parts )


types of recurrance relation 

1 . leniar  ex .fibonacci
2. Divide and conquer ex - Binary search (serach factor is reduced by 2 or a factor)


-------------------------------------------------

Binary search recursion 

we keept in mid three things that what will go in these three sections 

1. In the argument
<== In arguments thisngs which will need in the next recursive all will go for example arr, target, start, end. Mid
wont go in arguments because it is not required for each recursive call , mid will go in body as we need that just onece when we enter 
2. return type  : 
return type what we need as ans data type
3. in the body of function : In the body mid will go as we need to set it up once before checking conditions.


